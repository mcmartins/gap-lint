/* gap-lint v1.0.0, Manuel Martins - Generated on 19-10-2016 */
!function(a){"use strict";function b(e,h,j){function k(){if(4==q.readyState){if(200!=q.status)throw new Error("Honey: unable to load "+o.id+" ("+q.status+" "+q.statusText+")");if(g[p])return console.warn("Honey: module locked: "+o.id),void(h&&setTimeout(k,0));if(!f[p]){var b=j?j(q.responseText):q.responseText;a(o,f,d,"function(){\n"+b+"\n}")}h&&h(f[p])}}if(e instanceof Array){for(var l=[],m=e.length,n=0;n<e.length;n++)!function(a,c){l.push(b(a,h&&function(a){l[c]=a,0==--m&&h(l)},j))}(e[n],n);return l}j=void 0!==j?j:i;var o=c(e),p="$"+o.id;if(f[p])return"string"==typeof f[p]&&a(o,f,d,f[p]),h&&setTimeout(function(){h(f[p])},0),f[p];var q=new XMLHttpRequest;return h&&(q[null===q.onload?"onload":"onreadystatechange"]=k),q.open("GET",o.uri,!!h),g[p]=g[p]++||1,q.send(),g[p]--,!h&&k(),f[p]}function c(a){var b=a.match(/^(?:([^:\/]+):)?(\.\.?)?\/?((?:.*\/)?)([^\.]+)?(\..*)?$/),c=(d[0]?d[0].id:"").match(/^(?:([^:\/]+):)?(.*\/|)[^\/]*$/),f=b[2]?h[c[1]?parseInt(c[1]):0]:h[b[1]?parseInt(b[1]):0];e.href=(b[2]?f+c[2]+b[2]+"/":f)+b[3]+(b[4]?b[4]:"index");var g=e.href+(b[5]?b[5]:".js");if(g.substr(0,f.length)!=f)throw new Error("Honey: relative identifier outside of module root");var i=(b[1]?b[1]+":":"0:")+e.href.substr(f.length);return{id:i,uri:g}}"string"==typeof(new Error).fileName&&self.addEventListener("error",function(a){if(a.error instanceof Error){if(d[0])throw a.preventDefault(),new a.error.constructor(a.error.message,d[0].uri,a.error.lineNumber);var b=a.error.stack.match(/^[^\n@]*@([^\n]+):\d+:\d+/);if(null===b)console.warn("Honey: unable to read file name from stack");else if(a.error.fileName!=b[1])throw a.preventDefault(),new a.error.constructor(a.error.message,b[1],a.error.lineNumber)}},!1);var d=[];try{var e=new URL(location.href)}catch(a){console.warn("Honey: falling back to DOM workaround for URL parser ("+a+")"),e=document.createElement("A")}try{var f={};Object.defineProperty(f,"foo",{value:"bar",configurable:!0}),delete f.foo}catch(a){console.warn("Honey: falling back to DOM workaround for cache object ("+a+")"),f=document.createElement("DIV")}for(var g={},h=self.Honey&&void 0!==self.Honey.requirePath?self.Honey.requirePath.slice(0):["./"],i=self.Honey&&void 0!==self.Honey.requireCompiler?self.Honey.requireCompiler:null,j=[location.origin,location.href.substr(0,location.href.lastIndexOf("/")+1)],k=0;k<h.length;k++)e.href=("."==h[k][0]?j[1]:j[0])+h[k],h[k]=e.href;for(var l in self.Honey&&self.Honey.requirePreloaded)f["$"+c(l).id]=self.Honey.requirePreloaded[l].toString();for(var l in self.Honey&&self.Honey.requireOverrides)f["$"+c(l).id]=self.Honey.requireOverrides[l];if(void 0!==self.require)throw new Error("Honey: ''require' already defined in global scope");try{Object.defineProperty(self,"require",{value:b}),Object.defineProperty(self.require,"resolve",{value:c}),Object.defineProperty(self.require,"path",{get:function(){return h.slice(0)}})}catch(a){self.require=b,self.require.resolve=c,self.require.path=h.slice(0)}}(function(module){var global=self,exports={};if(Object.defineProperty(module,"exports",{get:function(){return exports},set:function(a){exports=a}}),arguments[2].unshift(module),Object.defineProperty(arguments[1],"$"+module.id,{get:function(){return exports}}),arguments[3]="("+arguments[3]+")();\n//# sourceURL="+module.uri,eval(arguments[3]),"string"!=typeof module.id)for(var id in module)arguments[1]["$"+require.resolve(id).id]=module[id].toString();arguments[2].shift()});